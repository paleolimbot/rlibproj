# Generated by roxygen2: do not edit by hand

S3method("$",rproj_proj)
S3method("[",rproj_proj_list)
S3method("[<-",rproj_proj_list)
S3method("[[",rproj_proj)
S3method("[[<-",rproj_proj_list)
S3method(as.data.frame,rproj_proj_list)
S3method(as_proj,character)
S3method(as_proj,crs)
S3method(as_proj,rproj_proj)
S3method(as_wk_trans,rproj_proj)
S3method(crs_engine_get_wk_trans,rlibrpoj_crs2crs_engine)
S3method(crs_engine_proj_pipeline,rlibrpoj_crs2crs_engine)
S3method(crs_engine_proj_pipeline_apply,rlibrpoj_crs2crs_engine)
S3method(format,rproj_context)
S3method(format,rproj_proj)
S3method(format,rproj_proj_list)
S3method(length,rproj_proj)
S3method(names,rproj_proj)
S3method(print,rproj_context)
S3method(print,rproj_proj)
S3method(print,rproj_proj_list)
S3method(print,rproj_trans_proj)
S3method(str,rproj_proj)
S3method(wk_crs_equal_generic,rproj_proj)
S3method(wk_crs_proj_definition,rproj_proj)
S3method(wk_trans_inverse,rproj_trans_proj)
export(as_proj)
export(as_proj_area)
export(crs_engine_rproj)
export(new_proj_list)
export(proj_as_proj_string)
export(proj_as_projjson)
export(proj_as_projjson_parsed)
export(proj_as_wkt)
export(proj_clone)
export(proj_context)
export(proj_context_clone)
export(proj_context_create)
export(proj_context_get_database_path)
export(proj_context_get_search_paths)
export(proj_context_get_url_endpoint)
export(proj_context_get_use_proj4_init_rules)
export(proj_context_get_user_writable_directory)
export(proj_context_is_network_enabled)
export(proj_context_set_log_level)
export(proj_coord)
export(proj_create)
export(proj_create_crs_to_crs)
export(proj_create_from_wkt)
export(proj_get_area_of_use)
export(proj_get_context)
export(proj_get_non_deprecated)
export(proj_get_remarks)
export(proj_get_scope)
export(proj_get_source_crs)
export(proj_get_target_crs)
export(proj_get_type)
export(proj_identify)
export(proj_info)
export(proj_is_crs)
export(proj_is_deprecated)
export(proj_is_equivalent_to)
export(proj_normalize_for_visualization)
export(proj_set_context)
export(proj_trans)
export(proj_version)
export(with_proj_context)
importFrom(crs2crs,crs_engine_get_wk_trans)
importFrom(crs2crs,crs_engine_proj_pipeline)
importFrom(crs2crs,crs_engine_proj_pipeline_apply)
importFrom(utils,str)
importFrom(wk,as_wk_trans)
importFrom(wk,wk_crs_equal_generic)
importFrom(wk,wk_crs_proj_definition)
importFrom(wk,wk_trans_inverse)
useDynLib(rproj, .registration = TRUE)
